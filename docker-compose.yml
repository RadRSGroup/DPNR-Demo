version: '3.8'

services:
  # Main Application
  app:
    build: ./app
    container_name: dpnr-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    volumes:
      - ./app:/app
      - node_modules:/app/node_modules
    networks:
      - dpnr-network
    depends_on:
      - db
      - redis
      - whisper

  # Transcription UI
  transcription-ui:
    build: ./transcription-ui
    container_name: dpnr-transcription-ui
    ports:
      - "8081:3003"
    environment:
      - WHISPER_URL=http://whisper:9000
      - OLLAMA_URL=http://host.docker.internal:11434
      - NODE_ENV=production
      - PORT=3003
    volumes:
      - transcription_uploads:/app/uploads
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - dpnr-network
    depends_on:
      - whisper

  # Database
  db:
    image: postgres:14-alpine
    container_name: dpnr-db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=dpnr
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dpnr-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:alpine
    container_name: dpnr-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dpnr-network

  # Whisper Service
  whisper:
    image: onerahmet/openai-whisper-asr-webservice:latest
    container_name: dpnr-whisper
    ports:
      - "9000:9000"
    networks:
      - dpnr-network

  # Monitoring Services
  prometheus:
    image: prom/prometheus:latest
    container_name: dpnr-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - dpnr-network

  grafana:
    image: grafana/grafana:latest
    container_name: dpnr-grafana
    ports:
      - "3002:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - dpnr-network

  # Exporters
  redis-exporter:
    image: oliver006/redis_exporter
    container_name: dpnr-redis-exporter
    ports:
      - "9121:9121"
    networks:
      - dpnr-network

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: dpnr-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@db:5432/dpnr?sslmode=disable
      - PG_EXPORTER_PORT=9187
    networks:
      - dpnr-network

volumes:
  postgres_data:
  redis_data:
  node_modules:
  prometheus_data:
  grafana_data:
  transcription_uploads:

networks:
  dpnr-network:
    driver: bridge 